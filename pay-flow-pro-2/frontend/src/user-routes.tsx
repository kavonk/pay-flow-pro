
// THIS FILE IS AUTOGENERATED WHEN PAGES ARE UPDATED
import { lazy } from "react";
import { RouteObject } from "react-router";


import { UserGuard } from "app";


import { StackHandlerRoutes, LoginRedirect } from "app/auth";


const AcceptInvitation = lazy(() => import("./pages/AcceptInvitation.tsx"));
const App = lazy(() => import("./pages/App.tsx"));
const BrandingSettings = lazy(() => import("./pages/BrandingSettings.tsx"));
const CreateCustomer = lazy(() => import("./pages/CreateCustomer.tsx"));
const CreateInvoice = lazy(() => import("./pages/CreateInvoice.tsx"));
const Customers = lazy(() => import("./pages/Customers.tsx"));
const Dashboard = lazy(() => import("./pages/Dashboard.tsx"));
const DunningRules = lazy(() => import("./pages/DunningRules.tsx"));
const EditCustomer = lazy(() => import("./pages/EditCustomer.tsx"));
const EditInvoice = lazy(() => import("./pages/EditInvoice.tsx"));
const InvoiceDetail = lazy(() => import("./pages/InvoiceDetail.tsx"));
const Invoices = lazy(() => import("./pages/Invoices.tsx"));
const JoinTeam = lazy(() => import("./pages/JoinTeam.tsx"));
const OnboardingComplete = lazy(() => import("./pages/OnboardingComplete.tsx"));
const Pricing = lazy(() => import("./pages/Pricing.tsx"));
const PricingPage = lazy(() => import("./pages/PricingPage.tsx"));
const Settings = lazy(() => import("./pages/Settings.tsx"));
const Signup = lazy(() => import("./pages/Signup.tsx"));
const Subscription = lazy(() => import("./pages/Subscription.tsx"));

export const userRoutes: RouteObject[] = [

	{ path: "/auth/redirect", element: <LoginRedirect />},
	{ path: "/auth/*", element: <StackHandlerRoutes />},
	{ path: "/accept-invitation", element: <UserGuard><AcceptInvitation /></UserGuard>},
	{ path: "/acceptinvitation", element: <UserGuard><AcceptInvitation /></UserGuard>},
	{ path: "/", element: <App />},
	{ path: "/branding-settings", element: <UserGuard><BrandingSettings /></UserGuard>},
	{ path: "/brandingsettings", element: <UserGuard><BrandingSettings /></UserGuard>},
	{ path: "/create-customer", element: <UserGuard><CreateCustomer /></UserGuard>},
	{ path: "/createcustomer", element: <UserGuard><CreateCustomer /></UserGuard>},
	{ path: "/create-invoice", element: <UserGuard><CreateInvoice /></UserGuard>},
	{ path: "/createinvoice", element: <UserGuard><CreateInvoice /></UserGuard>},
	{ path: "/customers", element: <UserGuard><Customers /></UserGuard>},
	{ path: "/dashboard", element: <UserGuard><Dashboard /></UserGuard>},
	{ path: "/dunning-rules", element: <UserGuard><DunningRules /></UserGuard>},
	{ path: "/dunningrules", element: <UserGuard><DunningRules /></UserGuard>},
	{ path: "/edit-customer", element: <UserGuard><EditCustomer /></UserGuard>},
	{ path: "/editcustomer", element: <UserGuard><EditCustomer /></UserGuard>},
	{ path: "/edit-invoice", element: <UserGuard><EditInvoice /></UserGuard>},
	{ path: "/editinvoice", element: <UserGuard><EditInvoice /></UserGuard>},
	{ path: "/invoice-detail", element: <UserGuard><InvoiceDetail /></UserGuard>},
	{ path: "/invoicedetail", element: <UserGuard><InvoiceDetail /></UserGuard>},
	{ path: "/invoices", element: <UserGuard><Invoices /></UserGuard>},
	{ path: "/join-team", element: <UserGuard><JoinTeam /></UserGuard>},
	{ path: "/jointeam", element: <UserGuard><JoinTeam /></UserGuard>},
	{ path: "/onboarding-complete", element: <UserGuard><OnboardingComplete /></UserGuard>},
	{ path: "/onboardingcomplete", element: <UserGuard><OnboardingComplete /></UserGuard>},
	{ path: "/pricing", element: <Pricing />},
	{ path: "/pricing-page", element: <UserGuard><PricingPage /></UserGuard>},
	{ path: "/pricingpage", element: <UserGuard><PricingPage /></UserGuard>},
	{ path: "/settings", element: <UserGuard><Settings /></UserGuard>},
	{ path: "/signup", element: <Signup />},
	{ path: "/subscription", element: <UserGuard><Subscription /></UserGuard>},

];
